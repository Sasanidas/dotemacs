#+STARTUP: showall
#+TITLE:     My Emacs Configuration
#+AUTHOR:    Jonathan Chu
#+EMAIL:     me@jonathanchu.is
#+DATE:      2015-03-01

** TODO TODO
- [X] Introduction
- [X] Installation
- [ ] Requirements
- [ ] Updates
- [X] Global config
- [ ] Functions
- [ ] Modes
- [ ] Key bindings

** Introduction

This is my emacs configuration, a somewhat simple config compared to
most. It's geared towards OS X, although it should work on most *nix
configs. I've never tried this on Windows, so YMMV.

The entire configuration is one file =~/.emacs.d/init.el= and aims to
provide you with a barebones configuration with sane defaults, built
upon =package.el=.

Although emacs has support for many programming languages, this
config is geared towards the following languages and workflows:

- Python
- CSS / LESS
- JavaScript
- Markdown
- Clojure


** Installation

To install, it's recommended to clone this repo wherever you prefer
and symlink the directory to =~/.emacs.d=.

: git clone https://github.com/jonathanchu/dotemacs.git

There is a =Makefile= provided that will create the symlink for you at
=~/.emacs.d=:

: make setup

My current emacs distro of choice is:

: brew install emacs --with-cocoa

Please note, this requires [[http://brew.sh][homebrew]] to be installed.

** Requirements

There are a few requirements needed for this config to properly run.
All of these prerequisites can be installed via =homebrew= and =npm=.

: brew install ag
: brew install node
: npm install jshint

For using =python-mode= and =anaconda=, you'll need to have =pip=
installed and install the following packages:

: pip install jedi
: pip install service-factory
: pip install six

** Updates

To update the packages, type @@html:<kbd>@@M-x
list-packages@@html:</kbd>@@, then @@html:<kbd>@@U@@html:</kbd>@@
followed by @@html:<kbd>@@x@@html:</kbd>@@.

I recently started to use @Malabarba's excellent [[https://github.com/Malabarba/paradox/][paradox]], which can be
invoked similarly as such - @@html:<kbd>@@M-x
paradox-list-packages@@html:</kbd>@@, then
@@html:<kbd>@@U@@html:</kbd>@@ followed by
@@html:<kbd>@@x@@html:</kbd>@@.

** Global Config

There are some very common things that most Emacs users do to setup
and configure their text editor environment.

: (fset 'yes-or-no-p 'y-or-n-p)  ;; only type 'y' or 'n' instead of 'yes' or 'no'
: (setq inhibit-splash-screen t)  ;; no splash screen
: (setq initial-scratch-message nil)  ;; no message on startup
: (menu-bar-mode -1)  ;; no menu bar
: (setq fill-column 80)  ;; M-q
: (when (functionp 'tool-bar-mode)
:   (tool-bar-mode -1))  ;; no toolbar
: (if window-system
:     (progn
:       (scroll-bar-mode -1)  ;; disable scroll bars
:       (set-frame-font "Inconsolata 15"))) ;; set font
: (set-face-attribute 'default nil :height 160)  ;; make the font more visually pleasing
: (setq mac-allow-anti-aliasing t)  ;; nice fonts in OS X
: (setq-default truncate-lines 1)  ;; no word wrap
: (setq-default line-spacing 4)
: (setq-default indent-tabs-mode nil)  ;; no tabs

** Modes

** Functions

*** Zap-to-char

    #+BEGIN_SRC emacs-lisp
    (defadvice zap-to-char (after my-zap-to-char-advice (arg char) activate)
      "Kill up to the ARG'th occurence of CHAR, and leave CHAR.
    The CHAR is replaced and the point is put before CHAR."
      (insert char)
      (forward-char -1))
    #+END_SRC

*** Smarter move to the beginning of a line

    #+BEGIN_SRC emacs-lisp
    (defun smarter-move-beginning-of-line (arg)
      "Move point back to indentation of beginning of line.
    Move point to the first non-whitespace character on this line.
    If point is already there, move to the beginning of the line.
    Effectively toggle between the first non-whitespace character and
    the beginning of the line.
    If ARG is not nil or 1, move forward ARG - 1 lines first.  If
    point reaches the beginning or end of the buffer, stop there."
      (interactive "^p")
      (setq arg (or arg 1))

      ;; Move lines first
      (when (/= arg 1)
        (let ((line-move-visual nil))
          (forward-line (1- arg))))

      (let ((orig-point (point)))
        (back-to-indentation)
        (when (= orig-point (point))
          (move-beginning-of-line 1))))
    #+END_SRC

*** Highlight call to ipdb

    #+BEGIN_SRC emacs-lisp
    (defun annotate-pdb ()
      "Highlight lines using a regexp that set the pdb breakpoint."
      (interactive)
      (highlight-lines-matching-regexp "import ipdb")
      (highlight-lines-matching-regexp "pdb.set_trace()"))
    (add-hook 'python-mode-hook 'annotate-pdb)
    #+END_SRC


** Key bindings

   I prefer to use `smex` instead of the default
   @@html:<kbd>@@M-x@@html:</kbd>@@ behavior. I map `smex` to
   @@html:<kbd>@@M-x@@html:</kbd>@@.
